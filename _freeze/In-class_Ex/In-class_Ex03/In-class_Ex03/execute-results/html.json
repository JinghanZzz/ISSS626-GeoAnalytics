{
  "hash": "b51fcd929ed1a0f08a22fd22973bf986",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class-Exercise 03\"\nauthor: \"ZHANG Jinghan\"\ndate: \"Sep 9 2024\"\nexecute:\n  eval: false\n  echo: true\n  message: false\n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spNetwork, tmap, tidyverse)\n```\n:::\n\n\n\n**Import Data**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork <- st_read(dsn=\"data/geospatial\", \n                   layer=\"Punggol_St\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare <- st_read(dsn=\"data/geospatial\",\n                     layer=\"Punggol_CC\")\n```\n:::\n\n\n\n**Visualise**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(network))\nplot(childcare,add=T,col='red',pch = 19)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('view')\ntm_shape(childcare) + \n  tm_dots() + \n  tm_shape(network) +\n  tm_lines()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n:::\n\n\n\n**NKDE**\n\nLixel\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stplanr)\nlixels <- lixelize_lines(network, \n                         700, \n                         mindist = 375)\n```\n:::\n\n\n\nLine center point\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples <- lines_center(lixels) \n```\n:::\n\n\n\ncalculate nkde\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndensities <- nkde(network, \n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, \n                  sparse = TRUE,\n                  verbose = FALSE)\n```\n:::\n\n\n\n#### **Visualising NKDE**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples$density <- densities\nlixels$density <- densities\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# rescaling to help the mapping\nsamples$density <- samples$density*1000\nlixels$density <- lixels$density*1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('view')\ntm_shape(lixels)+\n  tm_lines(col=\"density\")+\ntm_shape(childcare)+\n  tm_dots()\ntmap_mode('plot')\n```\n:::\n\n\n\n## **Network Constrained G- and K-Function Analysis**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkfun_childcare <- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 50, \n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkfun_childcare$plotk\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}